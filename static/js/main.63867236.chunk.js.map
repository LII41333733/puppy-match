{"version":3,"sources":["Utils/API.js","Components/Cards.js","Components/Pages/Discover.js","Components/Navbar.js","App.js","index.js"],"names":["get30RandomDogs","axios","method","url","headers","x-api-key","Cards","props","react_default","a","createElement","className","onClick","flipCard","id","src","alt","Discover","state","dogPhoto","dogArray","cardOneID","cardTwoID","cardOneKey","cardTwoKey","hiddenIDs","message","round","getDogs","then","_ref","data","_this","setState","dogData","setDogArrays","catch","err","console","log","roundData","slice","dogsArray","dogsArrayCopy","forEach","dog","i","push","dogsWithKeys","concat","map","pup","key","shuffledDogs","shuffleCards","setCardOne","setCardTwo","resetCards","result","setTimeout","checkRoundEnd","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","this","_this2","Components_Cards","includes","Component","Navbar","Link","to","App","BrowserRouter","Components_Navbar","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"iPAMaA,EAAkB,kBAAMC,IAAM,CACzCC,OAAO,MACPC,IAAI,6IACJC,QAAS,CACPC,YAAa,2CCWFC,MAjBf,SAAeC,GAKb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,8BAGZH,EAAAC,EAAAC,cAAA,OAAKE,QAAS,WAAQL,EAAMM,SAASN,EAAMO,KAAQC,IAAKR,EAAMJ,IAAKa,IAAI,MAAML,UAAWJ,EAAMI,cCgMrFM,6MAtMbC,MAAQ,CACNC,SAAU,GACVC,SAAU,GACVC,WAAY,EACZC,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,UAAW,GACXC,QAAS,eACTC,MAAO,KAOTC,QAAU,WACR5B,IAAkB6B,KAAK,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACxBC,EAAKC,SAAS,CACZC,QAASH,GACR,WACDC,EAAKG,mBAENC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI9BF,aAAe,WAIX,IAAIK,EAAY,GAES,IAArBR,EAAKd,MAAMS,QACba,EAAYR,EAAKd,MAAMgB,QAAQO,MAAM,EAAE,IAEhB,IAArBT,EAAKd,MAAMS,QACba,EAAYR,EAAKd,MAAMgB,QAAQO,MAAM,EAAE,KAEhB,IAArBT,EAAKd,MAAMS,QACba,EAAYR,EAAKd,MAAMgB,QAAQO,MAAM,GAAG,KAEjB,IAArBT,EAAKd,MAAMS,QACba,EAAYR,EAAKd,MAAMgB,QAAQO,MAAM,GAAG,KAEjB,IAArBT,EAAKd,MAAMS,QACba,EAAYR,EAAKd,MAAMgB,QAAQO,MAAM,GAAG,KAG1CH,QAAQC,IAAIC,GAEZ,IAAME,EAAY,GACZC,EAAgB,GAEtBH,EAAUI,QAAQ,SAACC,EAAKC,GACtBJ,EAAUK,KAAK,CACb5C,IAAK0C,EAAI1C,IACTW,GAAIgC,IAENH,EAAcI,KAAK,CACjB5C,IAAK0C,EAAI1C,IACTW,GAAIgC,MAIR,IAEIE,EAFiBN,EAAUO,OAAON,GAENO,IAAI,SAACC,EAAKL,GAExC,OADAK,EAAIC,IAAMN,EACHK,IAGHE,EAAerB,EAAKsB,aAAaN,GAEvChB,EAAKC,SAAS,CACZb,SAAUiC,OAKhBxC,SAAW,SAACC,EAAIsC,IACgB,IAA1BpB,EAAKd,MAAMG,UACbW,EAAKuB,WAAWzC,EAAIsC,GAEnBpB,EAAKd,MAAMK,aAAe6B,EACxBpB,EAAKC,SAAS,CAAEP,QAAS,KAAUM,EAAKwB,WAAW1C,EAAIsC,MAI9DG,WAAa,SAACzC,EAAIsC,GAChBpB,EAAKC,SAAS,CACZP,QAAS,kBACTL,UAAWP,EACXS,WAAY6B,OAIhBI,WAAa,SAAC1C,EAAIsC,GAChBpB,EAAKC,SAAS,CACZX,UAAWR,EACXU,WAAY4B,GACX,WACD,OAAQpB,EAAKd,MAAMG,YAAcW,EAAKd,MAAMI,UACzCU,EAAKyB,WAAW,SAAU3C,GAC1BkB,EAAKyB,WAAW,cAIvBA,WAAa,SAACC,EAAQ5C,GACpBkB,EAAKC,SAAS,CACZP,QAAqB,WAAXgC,EACP,mCAAuC,2BACzC,WACDC,WAAW,WACM,WAAXD,IACF1B,EAAKd,MAAMO,UAAUsB,KAAKjC,GAC1BkB,EAAK4B,iBAEP5B,EAAKC,SAAS,CACZZ,WAAY,EACZC,WAAY,EACZC,YAAa,EACbC,YAAa,KAEd,UAIP8B,aAAe,SAACO,GAEd,IADA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAClB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,KAGTD,cAAgB,WACsB,IAAhC5B,EAAKd,MAAMO,UAAUwC,SACE,IAArBjC,EAAKd,MAAMS,MACbK,EAAKC,SAAS,CACZP,QAAS,aAGXM,EAAKC,SAAS,CACZR,UAAW,GACXE,MAAOK,EAAKd,MAAMS,MAAQ,EAC1BD,QAAS,gBAER,WACDM,EAAKG,sGA5IXkC,KAAKzC,2CAmJE,IAAA0C,EAAAD,KAEP,OAEE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAEZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,IAA8C,KAAvB0D,KAAKnD,MAAMQ,QAAmB,OAAW2C,KAAKnD,MAAMQ,QAA3E,KAEDlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEZ0D,KAAKnD,MAAME,SAAS8B,IAAI,SAAAC,GAEvB,OAEE3C,EAAAC,EAAAC,cAAC6D,EAAD,CACEzD,GAAIqC,EAAIrC,GACRsC,IAAKD,EAAIC,IACTjD,IACGmE,EAAKpD,MAAMK,aAAe4B,EAAIC,KAAOkB,EAAKpD,MAAMM,aAAe2B,EAAIC,IACjED,EAAIhD,IAAQ,UAEjBU,SAAU,kBAAMyD,EAAKzD,SAASsC,EAAIrC,GAAIqC,EAAIC,MAC1CzC,UACG2D,EAAKpD,MAAMO,UAAU+C,SAASrB,EAAIrC,IAC9B,QAAY,wBA1LZ2D,qBCuBRC,EAzBA,WACb,OACElE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAMC,GAAG,IAAIjE,UAAU,6BAAvB,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BG,GAAG,gBCSpC+D,EAXH,WACV,OACErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACEtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlE,OCNzCmE,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.63867236.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getRandomDog = () => axios.get(\"https://dog.ceo/api/breeds/image/random\");\n\n// export const get6RandomDogs = () => axios.get(\"https://dog.ceo/api/breeds/image/random/6\");\n\nexport const get30RandomDogs = () => axios({\n  method:'GET',\n  url:\"https://cors-anywhere.herokuapp.com/https://api.thedogapi.com/v1/images/search?size=thumb&format=json&order=RANDOM&mime_types=jpg&limit=30\", \n  headers: {\n    \"x-api-key\": \"a796d190-0cd7-4c5f-ad66-1ebea44657b9\"\n  }\n})\n \n\n\nexport const getDogBreed = (breedName) => axios.get(`https://dog.ceo/api/breed/${breedName}/images`);\n\nexport const getBreedList = () => axios.get(\"https://dog.ceo/api/breeds/list\");","import React from \"react\";\n\n\n\nfunction Cards(props) {\n\n  \n\n\n  return (\n    <div className={`col-3 p-0 text-center mt-3`}>\n\n\n      <img onClick={() => { props.flipCard(props.id); }} src={props.url} alt=\"Dog\" className={props.className} />\n\n    </div>\n\n  );\n\n}\n\nexport default Cards;\n\n","import React, { Component } from 'react';\nimport { get30RandomDogs } from '../../Utils/API';\nimport Cards from \"../Cards\";\n\n\nclass Discover extends Component {\n\n  state = {\n    dogPhoto: \"\",\n    dogArray: [],\n    cardOneID: -1,\n    cardTwoID: -1,\n    cardOneKey: -1,\n    cardTwoKey: -1,\n    hiddenIDs: [],\n    message: \"Pick a card!\",\n    round: 1\n  }\n\n  componentDidMount() {\n    this.getDogs();\n  }\n\n  getDogs = () => {\n    get30RandomDogs().then(({ data }) => {\n      this.setState({\n        dogData: data\n      }, () => {\n        this.setDogArrays();\n      })\n    }).catch(err => console.log(err))\n  }\n  \n\n  setDogArrays = () => {\n\n  \n\n      let roundData = [];\n\n      if (this.state.round === 1) {\n        roundData = this.state.dogData.slice(0,6)\n      }\n      if (this.state.round === 2) {\n        roundData = this.state.dogData.slice(6,12)\n      }\n      if (this.state.round === 3) {\n        roundData = this.state.dogData.slice(12,18)\n      }\n      if (this.state.round === 4) {\n        roundData = this.state.dogData.slice(18,24)\n      }\n      if (this.state.round === 5) {\n        roundData = this.state.dogData.slice(24,30)\n      }\n\n      console.log(roundData)\n\n      const dogsArray = [];\n      const dogsArrayCopy = [];\n\n      roundData.forEach((dog, i) => {\n        dogsArray.push({\n          url: dog.url,\n          id: i,\n        })\n        dogsArrayCopy.push({\n          url: dog.url,\n          id: i,\n        })\n      })\n\n      const fullDogArray = dogsArray.concat(dogsArrayCopy)\n\n      let dogsWithKeys = fullDogArray.map((pup, i) => {\n        pup.key = i\n        return pup;\n      })\n\n      const shuffledDogs = this.shuffleCards(dogsWithKeys);\n\n      this.setState({\n        dogArray: shuffledDogs\n      })\n\n    }\n\n  flipCard = (id, key) => {\n    if (this.state.cardOneID === -1) {\n      this.setCardOne(id, key);\n    } else {\n      (this.state.cardOneKey === key) ?\n        (this.setState({ message: \"\" })) : (this.setCardTwo(id, key));\n    }\n  }\n\n  setCardOne = (id, key) => {\n    this.setState({\n      message: \"Find the match!\",\n      cardOneID: id,\n      cardOneKey: key,\n    })\n  }\n\n  setCardTwo = (id, key) => {\n    this.setState({\n      cardTwoID: id,\n      cardTwoKey: key,\n    }, () => {\n      return (this.state.cardOneID === this.state.cardTwoID) ?\n        (this.resetCards(\"winner\", id)) :\n        (this.resetCards(\"loser\"));\n    })\n  }\n\n  resetCards = (result, id) => {\n    this.setState({\n      message: (result === \"winner\") ?\n        (\"It's a match! Get another match!\") : (\"Not a match! Try Again!\")\n    }, () => {\n      setTimeout(() => {\n        if (result === \"winner\") {\n          this.state.hiddenIDs.push(id)\n          this.checkRoundEnd();\n        }\n        this.setState({\n          cardOneID: -1,\n          cardTwoID: -1,\n          cardOneKey: -1,\n          cardTwoKey: -1,\n        })\n      }, 200)\n    })\n  }\n\n  shuffleCards = (array) => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  checkRoundEnd = () => {\n    if (this.state.hiddenIDs.length === 6) {\n      if (this.state.round === 5) {\n        this.setState({\n          message: \"You win!\"\n        })\n      } else {\n        this.setState({\n          hiddenIDs: [],\n          round: this.state.round + 1,\n          message: \"Pick a card!\"\n  \n        }, () => {\n          this.setDogArrays();\n        })\n      }\n    }\n  }\n\n\n  render() {\n\n    return (\n\n      <div className=\"container text-center\">\n\n        {<h1 className=\"m-2\"> {(this.state.message === \"\") ? ('\\xa0') : (this.state.message)} </h1>}\n\n        <div className=\"row\">\n\n          {this.state.dogArray.map(pup => {\n\n            return (\n\n              <Cards\n                id={pup.id}\n                key={pup.key}\n                url={\n                  (this.state.cardOneKey === pup.key || this.state.cardTwoKey === pup.key) ?\n                    (pup.url) : (\"paw.jpg\")\n                }\n                flipCard={() => this.flipCard(pup.id, pup.key)}\n                className={\n                  (this.state.hiddenIDs.includes(pup.id))\n                    ? (\"blank\") : (\"dogImage\")\n                }\n              />\n\n            )\n\n          })}\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Discover;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav className=\" navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link to=\"/\" className=\"navbar-brand abs-center-x\">Dog Match!</Link>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        {/* <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/about\" \n            className={window.location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"}>About</Link>\n          </li>\n          <li className=\"nav-item\">\n           <Link to=\"/discover\" \n            className={(window.location.pathname === \"/discover\") ? \"nav-link active\" : \"nav-link\"}>Discover</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/search\" \n            className={(window.location.pathname === \"/search\") ? \"nav-link active\" : \"nav-link\"}>Search</Link>\n          </li>\n         \n        </ul> */}\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Discover from './Components/Pages/Discover';\nimport Navbar from './Components/Navbar';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar/>\n        <Route exact path=\"/\" component={Discover}/>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}